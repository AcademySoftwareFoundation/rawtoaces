///////////////////////////////////////////////////////////////////////////
// Copyright (c) 2013 Academy of Motion Picture Arts and Sciences 
// ("A.M.P.A.S."). Portions contributed by others as indicated.
// All rights reserved.
// 
// A worldwide, royalty-free, non-exclusive right to copy, modify, create
// derivatives, and use, in source and binary forms, is hereby granted, 
// subject to acceptance of this license. Performance of any of the 
// aforementioned acts indicates acceptance to be bound by the following 
// terms and conditions:
//
//  * Copies of source code, in whole or in part, must retain the 
//    above copyright notice, this list of conditions and the 
//    Disclaimer of Warranty.
//
//  * Use in binary form must retain the above copyright notice, 
//    this list of conditions and the Disclaimer of Warranty in the
//    documentation and/or other materials provided with the distribution.
//
//  * Nothing in this license shall be deemed to grant any rights to 
//    trademarks, copyrights, patents, trade secrets or any other 
//    intellectual property of A.M.P.A.S. or any contributors, except 
//    as expressly stated herein.
//
//  * Neither the name "A.M.P.A.S." nor the name of any other 
//    contributors to this software may be used to endorse or promote 
//    products derivative of or based on this software without express 
//    prior written permission of A.M.P.A.S. or the contributors, as 
//    appropriate.
// 
// This license shall be construed pursuant to the laws of the State of 
// California, and any disputes related thereto shall be subject to the 
// jurisdiction of the courts therein.
//
// Disclaimer of Warranty: THIS SOFTWARE IS PROVIDED BY A.M.P.A.S. AND 
// CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, 
// BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS 
// FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT ARE DISCLAIMED. IN NO 
// EVENT SHALL A.M.P.A.S., OR ANY CONTRIBUTORS OR DISTRIBUTORS, BE LIABLE 
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, RESITUTIONARY, 
// OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
// THE POSSIBILITY OF SUCH DAMAGE.
//
// WITHOUT LIMITING THE GENERALITY OF THE FOREGOING, THE ACADEMY 
// SPECIFICALLY DISCLAIMS ANY REPRESENTATIONS OR WARRANTIES WHATSOEVER 
// RELATED TO PATENT OR OTHER INTELLECTUAL PROPERTY RIGHTS IN THE ACADEMY 
// COLOR ENCODING SYSTEM, OR APPLICATIONS THEREOF, HELD BY PARTIES OTHER 
// THAN A.M.P.A.S., WHETHER DISCLOSED OR UNDISCLOSED.
///////////////////////////////////////////////////////////////////////////

#include <valarray>
#include <string>
#include "assert.h"

#if !defined(TRUE)
#define TRUE 1
#endif

#if !defined(FALSE)
#define FALSE 0
#endif

#if 0
#define debug(x) (cout << x << endl)
#else
#define debug(x)
#endif

typedef half   float16_t;
typedef float  float32_t;
typedef double float64_t;

using namespace std;

struct CIEXYZ {
    float Xt;
    float Yt;
    float Zt;
};

struct CIELab {
    float L;
    float a;
    float b;
};

struct trainSpec {
    float data[120];
    float wl;
};

struct CMF {
    float wl;
    float xbar;
    float ybar;
    float zbar;
};

struct RGBSen {
    float RSen;
    float GSen;
    float BSen;
};

struct illum {
    CIEXYZ XYZt;
    string src;
    string des;
};

struct lightsrc {
    string type;
    float* data;
    float* wavelength;
};

//static const double XYZ_acesrgb_3[3][3] = {
//    { 1.0634731317028,      0.00639793641966071,   -0.0157891874506841 },
//    { -0.492082784686793,   1.36823709310019,      0.0913444629573544  },
//    { -0.0028137154424595,  0.00463991165243123,   0.91649468506889    }
//};

static const double XYZ_acesrgb_3[3][3] = {
    { 1.01584,   -0.01773,   0.04637 },
    { -0.50780,  1.39129,    0.11917 },
    { 0.00846,   -0.01404,   1.21907 }
};

static const double XYZ_acesrgb_4[4][4] = {
    { 1.0634731317028,      0.00639793641966071,   -0.0157891874506841,     0.0 },
    { -0.492082784686793,   1.36823709310019,      0.0913444629573544,      0.0 },
    { -0.0028137154424595,  0.00463991165243123,   0.91649468506889,        0.0 },
    { 0.0,                  0.0,                   0.0,                     1.0 }

};

static const float chromaticitiesACES[4][2] = {
    { 0.73470f,     0.26530f  },
    { 0.00000f,     1.00000f  },
    { 0.00010f,     -0.07700f },
    { 0.32168f,     0.33767f  }
};

static const float deviceWhite[3] = {1.0, 1.0, 1.0};

// Different Color Adaptation Matrices
static const float bradford[3][3] = {
    {0.8951,  0.2664, -0.1614},
    {-0.7502, 1.7135,  0.0367},
    {0.0389,  -0.0685, 1.0296}
};

static const float cat02[3][3] = {
    {0.7328,  0.4296,  -0.1624},
    {-0.7036, 1.6975,  0.0061 },
    {0.0030,  0.0136,  0.9834 }
};

static const float reillum[3][3] = {
    {1.6160, -0.3591, -0.2569},
    {-0.9542, 1.8731,  0.0811},
    {0.0170,  -0.0333, 1.0163}
};

static const float CATMatrix[3][3] = {
    { 1.0634731317028,      0.00639793641966071,   -0.0157891874506841 },
    { -0.492082784686793,   1.36823709310019,      0.0913444629573544  },
    { -0.0028137154424595,  0.00463991165243123,   0.91649468506889    }
};


static const struct {
    const char* maker;
    const char* model;
    uint8_t interval;
    RGBSen sense[81];
} Camera[] ={
    { "ARRI", "D21", 5,
        {{ 0.000188205, 8.59E-05, 9.58E-05 },
            { 0.000440222, 0.000166118, 0.000258734 },
            { 0.001561591, 0.00046321, 0.001181466 },
            { 0.006218858, 0.001314864, 0.006881015 },
            { 0.022246734, 0.003696276, 0.031937733 },
            { 0.049120511, 0.00805609, 0.087988515 },
            { 0.102812947, 0.017241631, 0.216210301 },
            { 0.105467801, 0.021953991, 0.276918236 },
            { 0.117352663, 0.028731455, 0.384008295 },
            { 0.108489774, 0.036438901, 0.498308108 },
            { 0.078494347, 0.037473311, 0.485933057 },
            { 0.06542927, 0.047763009, 0.618489235 },
            { 0.05126662, 0.057989658, 0.696558624 },
            { 0.038300854, 0.063272391, 0.711794157 },
            { 0.036088371, 0.078451972, 0.821540625 },
            { 0.038076306, 0.099730024, 0.918286066 },
            { 0.036894365, 0.112097767, 0.818615612 },
            { 0.044395944, 0.156013174, 0.907103055 },
            { 0.055918682, 0.217501304, 1 },
            { 0.060307176, 0.238434493, 0.86480047 },
            { 0.066779015, 0.269670797, 0.878082723 },
            { 0.074505107, 0.300101812, 0.874303769 },
            { 0.07562978, 0.290737255, 0.704674036 },
            { 0.085791103, 0.328330642, 0.628143997 },
            { 0.108943209, 0.424666004, 0.588816784 },
            { 0.138099867, 0.523135173, 0.513082855 },
            { 0.168736396, 0.591697868, 0.436252915 },
            { 0.220667659, 0.742521719, 0.392230422 },
            { 0.268662105, 0.832207187, 0.343540362 },
            { 0.321560163, 0.912162297, 0.312675861 },
            { 0.37671682, 0.976493082, 0.304109232 },
            { 0.410777194, 0.973507973, 0.292240658 },
            { 0.421878401, 1, 0.291164917 },
            { 0.388993508, 0.931244461, 0.269598208 },
            { 0.354154608, 0.889356652, 0.248312101 },
            { 0.34283344, 0.762661473, 0.213286579 },
            { 0.380725719, 0.693921344, 0.194295275 },
            { 0.469885563, 0.5991218, 0.170597248 },
            { 0.599407862, 0.530315531, 0.155055826 },
            { 0.713821326, 0.418038191, 0.1317383 },
            { 0.80813316, 0.340043294, 0.116047887 },
            { 0.939975954, 0.27676007, 0.104954578 },
            { 1, 0.217867885, 0.093258038 },
            { 0.956064245, 0.155062572, 0.076556466 },
            { 0.894704087, 0.11537981, 0.064641572 },
            { 0.767742902, 0.089103008, 0.053623886 },
            { 0.798777151, 0.083004112, 0.052099277 },
            { 0.763111509, 0.075973825, 0.04909842 },
            { 0.682557924, 0.067551041, 0.044677337 },
            { 0.56116663, 0.056571832, 0.0382092 },
            { 0.436680781, 0.045437665, 0.031713716 },
            { 0.414781937, 0.042487508, 0.030781211 },
            { 0.380963428, 0.03912278, 0.029786697 },
            { 0.305406639, 0.032338965, 0.026385578 },
            { 0.260012751, 0.028342775, 0.02448327 },
            { 0.191033296, 0.022001542, 0.020646569 },
            { 0.141171909, 0.017151907, 0.017480635 },
            { 0.122396106, 0.01528005, 0.015881482 },
            { 0.102299712, 0.013443924, 0.01414462 },
            { 0.07855096, 0.011348793, 0.011965207 },
            { 0.060474144, 0.009399874, 0.009474274 },
            { 0.041685047, 0.007185144, 0.006997807 },
            { 0.028123563, 0.005351653, 0.005182991 },
            { 0.02203961, 0.004473424, 0.004168945 },
            { 0.017482165, 0.003764279, 0.003387594 },
            { 0.012357413, 0.002865598, 0.002507749 },
            { 0.008721969, 0.001999441, 0.001714727 },
            { 0.006462905, 0.001438107, 0.001233306 },
            { 0.00454705, 0.001049424, 0.000918575 },
            { 0.002933579, 0.000695583, 0.000587696 },
            { 0.00211892, 0.000533403, 0.000436494 },
            { 0.001499002, 0.000394215, 0.000315097 },
            { 0.001022687, 0.000293059, 0.000238467 },
            { 0.000681853, 0.000211926, 0.000168269 },
            { 0.000561613, 0.000202539, 0.000170632 },
            { 0.000384839, 0.000125687, 8.94E-05 },
            { 0.000286597, 0.000104774, 6.92E-05 },
            { 0.000269169, 0.000138887, 0.000126057 },
            { 0.000163058, 6.47E-05, 4.57E-05 },
            { 0.000149065, 7.26E-05, 5.84E-05 },
            { 3.71E-05, 0, 2.70E-06 }
      }
    },
    { "CANON", "5D", 5,
        {{ 0.0354, 0.0359, 0.0334 },
            { 0.0325, 0.0329, 0.0327 },
            { 0.0295, 0.03, 0.032 },
            { 0.0234, 0.0248, 0.0299 },
            { 0.0173, 0.0197, 0.0279 },
            { 0.0167, 0.0218, 0.087 },
            { 0.0162, 0.024, 0.1461 },
            { 0.0171, 0.0368, 0.3299 },
            { 0.0181, 0.0495, 0.5138 },
            { 0.016, 0.0519, 0.5756 },
            { 0.0139, 0.0542, 0.6375 },
            { 0.0132, 0.0676, 0.6833 },
            { 0.0125, 0.0809, 0.7291 },
            { 0.0116, 0.0856, 0.7736 },
            { 0.0107, 0.0902, 0.818 },
            { 0.0108, 0.1084, 0.8347 },
            { 0.0109, 0.1267, 0.8515 },
            { 0.0107, 0.2031, 0.8425 },
            { 0.0105, 0.2794, 0.8336 },
            { 0.0116, 0.4046, 0.777 },
            { 0.0126, 0.5298, 0.7204 },
            { 0.0122, 0.5757, 0.6666 },
            { 0.0118, 0.6216, 0.6129 },
            { 0.0156, 0.7252, 0.5315 },
            { 0.0195, 0.8288, 0.4501 },
            { 0.0296, 0.8789, 0.3852 },
            { 0.0397, 0.9289, 0.3204 },
            { 0.0655, 0.9532, 0.2443 },
            { 0.0912, 0.9776, 0.1682 },
            { 0.129, 0.9888, 0.1296 },
            { 0.1667, 1, 0.091 },
            { 0.166, 0.9462, 0.0717 },
            { 0.1654, 0.8925, 0.0524 },
            { 0.157, 0.8774, 0.0438 },
            { 0.1487, 0.8624, 0.0351 },
            { 0.1652, 0.8028, 0.0283 },
            { 0.1817, 0.7431, 0.0216 },
            { 0.2369, 0.6965, 0.0189 },
            { 0.292, 0.6499, 0.0163 },
            { 0.3631, 0.5731, 0.0147 },
            { 0.4343, 0.4963, 0.0131 },
            { 0.4628, 0.4256, 0.0119 },
            { 0.4914, 0.355, 0.0107 },
            { 0.5025, 0.2939, 0.0102 },
            { 0.5136, 0.2328, 0.0098 },
            { 0.4774, 0.1707, 0.0088 },
            { 0.4413, 0.1087, 0.0079 },
            { 0.4119, 0.0843, 0.0074 },
            { 0.3824, 0.0599, 0.0068 },
            { 0.3479, 0.0471, 0.0069 },
            { 0.3134, 0.0344, 0.0069 },
            { 0.2808, 0.0289, 0.0072 },
            { 0.2482, 0.0235, 0.0075 },
            { 0.2119, 0.019, 0.0077 },
            { 0.1757, 0.0146, 0.0078 },
            { 0.1561, 0.0137, 0.008 },
            { 0.1366, 0.0128, 0.0082 },
            { 0.1093, 0.012, 0.0076 },
            { 0.082, 0.0111, 0.007 },
            { 0.0592, 0.0093, 0.0062 },
            { 0.0365, 0.0075, 0.0054 },
            { 0.023, 0.0071, 0.0056 },
            { 0.0095, 0.0066, 0.0059 },
            { 0.0086, 0.0069, 0.0063 },
            { 0.0076, 0.0072, 0.0067 },
            { 0.0073, 0.0068, 0.0065 },
            { 0.007, 0.0064, 0.0064 },
            { 0.007, 0.0069, 0.0068 },
            { 0.007, 0.0073, 0.0073 },
            { 0.0061, 0.0063, 0.0063 },
            { 0.0052, 0.0053, 0.0053 },
            { 0.0042, 0.0044, 0.0044 },
            { 0.0033, 0.0034, 0.0034 },
            { 0.0024, 0.0024, 0.0024 },
            { 0.0015, 0.0014, 0.0014 },
            { 0.0017, 0.0017, 0.0016 },
            { 0.0019, 0.0019, 0.0018 },
            { 0.0021, 0.0021, 0.0021 },
            { 0.0023, 0.0023, 0.0023 },
            { 0.0025, 0.0025, 0.0025 },
            { 0.0027, 0.0027, 0.0027 }
        }
    },
    { "CANON", "S90", 5,
        {{ 0.0126, 0.0237, 0.0165 },
            { 0.0117, 0.0199, 0.0164 },
            { 0.0107, 0.0161, 0.0163 },
            { 0.0089, 0.0156, 0.0152 },
            { 0.007, 0.0152, 0.0141 },
            { 0.0119, 0.0249, 0.0749 },
            { 0.0168, 0.0347, 0.1357 },
            { 0.0282, 0.0661, 0.2702 },
            { 0.0397, 0.0975, 0.4047 },
            { 0.0364, 0.1055, 0.432 },
            { 0.0331, 0.1135, 0.4592 },
            { 0.0323, 0.1327, 0.504 },
            { 0.0316, 0.152, 0.5488 },
            { 0.03, 0.1784, 0.599 },
            { 0.0284, 0.2048, 0.6492 },
            { 0.0277, 0.2441, 0.675 },
            { 0.027, 0.2834, 0.7007 },
            { 0.0306, 0.3405, 0.7068 },
            { 0.0342, 0.3976, 0.7128 },
            { 0.0363, 0.4353, 0.6715 },
            { 0.0383, 0.473, 0.6301 },
            { 0.0368, 0.4849, 0.5886 },
            { 0.0353, 0.4968, 0.5471 },
            { 0.0377, 0.5697, 0.4714 },
            { 0.0401, 0.6426, 0.3957 },
            { 0.0462, 0.7061, 0.3426 },
            { 0.0523, 0.7697, 0.2894 },
            { 0.0682, 0.8313, 0.2343 },
            { 0.0841, 0.8929, 0.1792 },
            { 0.0888, 0.9464, 0.1544 },
            { 0.0935, 1, 0.1296 },
            { 0.0748, 0.9597, 0.1084 },
            { 0.0562, 0.9194, 0.0873 },
            { 0.048, 0.9147, 0.0732 },
            { 0.0398, 0.9099, 0.0591 },
            { 0.0388, 0.8743, 0.0462 },
            { 0.0377, 0.8388, 0.0333 },
            { 0.0577, 0.8146, 0.0279 },
            { 0.0778, 0.7904, 0.0225 },
            { 0.3061, 0.7439, 0.0195 },
            { 0.5344, 0.6975, 0.0166 },
            { 0.6576, 0.6265, 0.0147 },
            { 0.7808, 0.5555, 0.0129 },
            { 0.7927, 0.5005, 0.0121 },
            { 0.8046, 0.4454, 0.0113 },
            { 0.7924, 0.3736, 0.0108 },
            { 0.7802, 0.3019, 0.0103 },
            { 0.7689, 0.2598, 0.0104 },
            { 0.7575, 0.2178, 0.0105 },
            { 0.7442, 0.1934, 0.0119 },
            { 0.7308, 0.1691, 0.0132 },
            { 0.7092, 0.1543, 0.0154 },
            { 0.6875, 0.1394, 0.0176 },
            { 0.6593, 0.1243, 0.0231 },
            { 0.631, 0.1091, 0.0286 },
            { 0.5509, 0.0965, 0.0281 },
            { 0.4709, 0.0839, 0.0276 },
            { 0.2849, 0.0527, 0.0175 },
            { 0.0988, 0.0215, 0.0075 },
            { 0.0602, 0.0144, 0.0058 },
            { 0.0217, 0.0073, 0.004 },
            { 0.0172, 0.0063, 0.0035 },
            { 0.0127, 0.0052, 0.0029 },
            { 0.009, 0.0049, 0.003 },
            { 0.0053, 0.0045, 0.0031 },
            { 0.0044, 0.0045, 0.003 },
            { 0.0036, 0.0046, 0.003 },
            { 0.0042, 0.0044, 0.0037 },
            { 0.0048, 0.0043, 0.0043 },
            { 0.0042, 0.0038, 0.0037 },
            { 0.0036, 0.0032, 0.0031 },
            { 0.003, 0.0027, 0.0025 },
            { 0.0024, 0.0022, 0.0019 },
            { 0.0018, 0.0017, 0.0013 },
            { 0.0012, 0.0012, 0.0006 },
            { 0.0013, 0.0013, 0.0008 },
            { 0.0013, 0.0014, 0.0009 },
            { 0.0014, 0.0015, 0.001 },
            { 0.0015, 0.0017, 0.0011 },
            { 0.0016, 0.0018, 0.0012 },
            { 0.0017, 0.0019, 0.0013 },
        }
    },
};

